@model VinodNair.Blog.Web.ViewModels.AddBlogPostRequest
@{
}

<div class="bg-secondary bg-opacity-10 py-2">
    <div class="container">
        <h1>Add New BlogPost</h1>
    </div>
</div>

<div class="container py-5">
    <partial name="_AlertMessagePartial" view-data="ViewData">
    <form method="post">

        <div class="mb-3">
            <label class="form-label">Title (*)</label>
            <input type="text" class="form-control" id="heading" asp-for="Title" required />
            <span class="text-danger" asp-validation-for="Title"></span>
        </div>


        <div class="mb-3">
                <label class="form-label">Content (*)</label>
            <textarea class="form-control" id="content" asp-for="Content" required></textarea>
            <span class="text-danger" asp-validation-for="Content"></span>
        </div>


        <div class="mb-3">
            <label class="form-label">Banner Image Upload</label>
            <input type="file" id="featuredImageUpload" class="form-control" />

            <img src="" id="featuredImageDisplay" style="display:none;width: 300px;" />
        </div>

        <div class="mb-3">
                <label class="form-label">Banner Image URL (*)</label>
            <input type="text" class="form-control" id="featuredImageUrl" asp-for="BannerImageUrl" />
                <span class="text-danger" asp-validation-for="BannerImageUrl"></span>
        </div>


        <div class="mb-3">
            <label class="form-label">Author</label>
            <input type="text" class="form-control" id="author" asp-for="Author" />
        </div>


        <div class="mb-3">
            <button type="submit" class="btn btn-dark">
                Save
            </button>
        </div>



    </form>
</div>


@section Scripts {
    <script>
        var editor = new FroalaEditor('#content', {
            imageUploadURL: '/api/images'
        });


        const featuredUploadElement = document.getElementById('featuredImageUpload');
        const featuredImageUrlElement = document.getElementById('featuredImageUrl');
        const featuredImageDisplayElement = document.getElementById('featuredImageDisplay');


        async function uploadFeaturedImage(e) {
            console.log(e.target.files[0]);

            let data = new FormData();
            data.append('file', e.target.files[0]);
            var isValid = validateImageFile(e);
            if(!isValid)
            return;
            await fetch('/api/images', {
                method: 'POST',
                headers: {
                    'Aceept': '*/*',
                },
                body: data
            }).then(response => response.json())
                .then(result => {
                    featuredImageUrlElement.value = result.link;
                    featuredImageDisplayElement.src = result.link;
                    featuredImageDisplayElement.style.display = 'block';
                });
        }
         function validateImageFile(e){
             var _validFileExtensions = [".jpg", ".gif", ".png"];

            if (e.target.files.length > 0) {
                for (var i = 0; i <= e.target.files.length - 1; i++) {

                    //check file extension
                    var blnValid = false;
                     for (var j = 0; j < _validFileExtensions.length; j++) {
                        var sFileName = e.target.files.item(i).name;
                        var sCurExtension = _validFileExtensions[j];
                        if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {
                            blnValid = true;
                            break;
                        }
                      }
                       if (!blnValid) {
                            alert("Sorry, " + sFileName + " is invalid, allowed extensions are: " + _validFileExtensions.join(", "));
                            return false;
                        }

                    const fsize = e.target.files.item(i).size;
                    const file = Math.round((fsize / 1024));
                    // The size of the file.
                    if (file >=   5120) {
                        alert("File too Big, please select a file less than 5MB");
                        return false;
                    }


                }
                return true;
            }
        }

        featuredUploadElement.addEventListener('change', uploadFeaturedImage);

    </script>
}